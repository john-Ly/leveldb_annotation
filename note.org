* 编译 & 使用
** ref
1. https://github.com/google/leveldb/README.md
** practice
1. git clone --recurse-submodules https://github.com/google/leveldb.git
   需要安装benchmark 用到的软件
   - clang/
   - gperftool /gtest gmock tcmalloc
   - snappy /compress
   - ninja /cmake 
   - crc32c /校验和
   - kyotocabinet /benchmark
   - sqlite3
2. mkdir -p build && cd build
   cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_INSTALL_PREFIX=$HOME/ws/test_leveldb \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache
   cmake --build . [--target install]        // [...] optional

   vim test1.cc
   g++ test1.cc -o test1 -I./lib/ -lleveldb

3. CMakeLists.txt
   L337 leveldb_test(可以添加一些自定义的测试文件 -- 可以利用leveldb源码)
   target_link_libraries  可以代表有些第三方库需要安装(往往是动态库)

@TODO 如何找到需要预安装的软件+cmake编译选项
      动态库 和 静态库(如何将程序动态连接到gperftool)